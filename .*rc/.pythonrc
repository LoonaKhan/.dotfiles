#!/usr/bin/python3

import os
import sys
import math
import datetime
from random import *



# TERMINAL UTILITIES AND SETTINGS

# interactive prompt: [py] -> 
sys.ps1 = f'\033[0;1m[\033[0;36;1mp\033[0;33;1my\033[0;1m] \033[0;36;1m->\033[0m '
sys.ps2 = '\033[0;33;1m... \033[0m'

# clears the screen
def clear(): os.system("clear")

# allows us to exit with "exit"
exit.__class__.__repr__ = sys.exit



# CONVERSIONS AND REFERENCES
# I sometimes use these when running calculations

# list of all corresponding letters and numbers
lettersToNums = {}
numsToLetters = {}
letter = 97 # starts with letter a
for i in range(0,26):
    lettersToNums[chr(letter+i)] = i
    numsToLetters[str(i)] = chr(letter+i)

ordersOfMagnitude = {
    "10E-18": "A/Atto",
    "10E-15": "f/Femto",
    "10E-12": "p/Pico",
    "10E-9": "n/Nano",
    "10E-6": "Âµ/Micro",
    "10E-3": "m/Milli",
    "10E-2": "c/Centi",
    "10E-1": "d/Deci",
    "10E1": "D/da/Deka",
    "10E2": "h/Hecto",
    "10E3": "k/Kilo",
    "10E6": "M/Mega",
    "10E9": "G/Giga",
    "10E12": "T/Terra",
    "10E15": "P/Peta",
    "10E18": "e/Exa"
}



# COMPUTATIONAL UTILITIES
# hastens or simplifies calculations
# Helpful since i often use a python shell as a calculator.
# 
# This dosent really include calculators, as i already have dedicated scripts for those
# rather, this just quickens basic calculations in the python shell

# returns exponential numbers such as 7E2
# todo: make this a class? have it print the value as XEy
def exp(num:float, E:int):
    # Returns the exponent of a number
    # It makes it a bit faster to use large numbers
    # Ex: exp(num=7, E=2)
    # >>> 7* 10**2
    return num * 10**E

# constants?
# G
# E
# u0
# etc
# e

# radian/degree conversions
# does not work in some scenarios.
def toDeg(theta:float):
    return (theta * 180) / math.pi

def toRad(theta:float):
    return (theta * math.pi) / 180
